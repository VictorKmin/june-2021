{
  "swagger": "2.0",
  "info": {
    "title": "June-2021",
    "version": "1.0",
    "description": "This is Hello world",
    "contact": {
      "email": "kminvict@gia",
      "name": "Viktor"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "operationId": "createUser",
        "description": "This is how to create user",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "default": "Dimas",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "default": "example@email.com",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "default": "Hello_World!1",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "Just an error",
            "schema": {
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "SOmthisng went worng"
                },
                "code": {
                  "type": "number",
                  "example": 400
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Ths is `access_token` from POST /auth endpoint",
            "default": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "default": 1,
            "required": false,
            "type": "number"
          },
          {
            "name": "perPage",
            "in": "query",
            "default": 20,
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/singleUser"
              }
            }
          },
          "400": {
            "description": "Just an error",
            "schema": {
              "$ref": "#/definitions/commonError"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "operationId": "getSingleUser",
        "description": "This is how to create user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "default": "6787ad8dadakad",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "Just an error",
            "schema": {
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "SOmthisng went worng"
                },
                "code": {
                  "type": "number",
                  "example": 400
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "singleUser": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "12345qwerty",
          "description": "MongoDB ID"
        },
        "email": {
          "type": "string",
          "example": "example@email.com"
        },
        "name": {
          "type": "string",
          "example": "Dimasik"
        }
      }
    },
    "commonError": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "example": "SOmthisng went worng"
        },
        "code": {
          "type": "number",
          "example": 400
        }
      }
    }
  }
}